#!/bin/sh
# preinst script for fiware-monitoring-ngsi-adapter

set -e

# actual value of this variable will be replaced after dh_install (see rules)
NODE_REQ_VERSION=#DH_NODE_REQ_VERSION#

# Function to compare version strings (in `x.y.z' format)
valid_version() {
	local CUR=$1
	local REQ=$2
	printf "$CUR\n$REQ" \
	| awk '{split($0,v,"."); for (i in v) printf "%05d ", v[i]; print}' \
	| sort | tail -1 | cat -E | fgrep -q $CUR'$'
}

# Function to setup NodeSource repo (for the latest node.js version)
setup_nodesource() {
	fmt --width=${COLUMNS:-$(tput cols)} 1>&2 <<-EOF

		ERROR: node.js >=v$NODE_REQ_VERSION is required. Setting up
		NodeSource repositories for the latest version ...
	EOF

	# prepare sources list configuration for the next `apt-get' command
	# and DO NOT run `apt-get update' within this script (due to locking)
	MAJOR=${NODE_REQ_VERSION%%.*}
	MINOR=$(expr ${NODE_REQ_VERSION%.*} : '0\.\(.*\)' '|' 'x')
	curl -sL https://deb.nodesource.com/setup_$MAJOR.$MINOR \
	| grep -v "apt-get update" \
	| bash - >/dev/null
	if [ $? -eq 0 ]; then fmt --width=${COLUMNS:-$(tput cols)} 1>&2 <<-EOF

		Please run \`apt-get update && apt-get -y install nodejs' to
		upgrade version prior reinstalling the package.

		EOF
	else fmt --width=${COLUMNS:-$(tput cols)} 1>&2 <<-EOF

		Unable to setup repositories. Please upgrade node.js manually
		and then reinstall the package.

		EOF
	fi
}

case "$1" in
install|upgrade)
	# Fix to ensure installed prerequisite 'nodejs' may be invoked as 'node'
	update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10

	# Normally, dependency checking (package + minimum required version) is
	# performed by `control' script and not in this preinstallation phase.
	# However, the way up-to-date versions of node.js may be installed is a
	# little bit "tricky": we let `control' require any (older) node version
	# and here we prepare NodeSource repo configuration for a next `apt-get'
	# command (cannot be run here due to locking of apt-related files)
	NODE_CUR_VERSION=$(node -pe 'process.versions.node' 2>/dev/null)
	if ! valid_version ${NODE_CUR_VERSION:-0.0.0} $NODE_REQ_VERSION; then
		setup_nodesource
		exit 1
	fi
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
